name: Tests

on:
  - push
  - pull_request

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.12", os: "ubuntu-latest", session = "tests" }
          - { python: "3.13", os: "ubuntu-latest", session = "tests" }
          - { python: "3.12", os: "windows-latest", session = "tests" }
          - { python: "3.12", os: "macos-latest", session = "tests" }
          - { python: "3.12", os: "ubuntu-latest", session = "mypy" }
          - { python: "3.13", os: "ubuntu-latest", session = "mypy" }

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install project
        run: uv sync --python ${{ matrix.python }} --locked --dev

      - name: Run tests
        if: ${{ matrix.session == "tests" }}
        run: uv run --python ${{ matrix.python }} --locked --dev coverage --parallel-mode -m pytest tests

      - name: Run mypy
        if: ${{ matrix.session == "mypy" }}
        run: uv run --python ${{ matrix.python }} --locked --dev mypy tests src

      - name: Upload coverage data
        if: ${{ always() && matrix.session == "tests" }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python }}-${{ matrix.os }}
          path: ".coverage.*"
          include-hidden-files: true

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install project
        run: uv sync --locked --dev

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage data
        run: uv run --locked --dev coverage combine

      - name: Display human readable report
        run: uv run --locked --dev coverage report

      - name: Create coverage xml report
        run: uv run --locked --dev coverage xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
